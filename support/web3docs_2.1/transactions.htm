<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Transactions</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?transactions.htm"; }
  else { parent.quicksync('a6.3.3');  parent.track('topic', location.href);}
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Transactions</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="caching_in_the_web3_platform.htm">Previous</a>&nbsp;
     <a href="managing_long_running_jobs.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>The nature of the RESTful API is that resource representations are fetched updated and then sent back to the server for it to update the underlying data store. For small updates, such as changing a topic label, adding a single subject identifier, this approach works fine. However, for updates to more than one resource, e.g. creating two topics and an association between them, the inability to do all of this in a single transactional way could be a problem.</p>
<p>&nbsp;</p>
<p>The Web3 Platform supports the notion of transactions. Transactions have a representation that describes a set of operations that should be performed. Each topic map has a collection of Jobs that should be executed. To execute a transaction a Transaction Job is first created and then the transaction data is uploaded to the new job. Background job processing services process the transaction and set the job status to completed when done. This means that all transaction processing happens asynchronously. If more than one Web3 node is installed then they will share the work of processing transactions.</p>
<p>&nbsp;</p>
<p>The .NET client API abstracts away the complexity of creating Jobs, posting transactions and waiting for the transaction processing to complete.</p>

</td></tr></table>

</body>
</html>
