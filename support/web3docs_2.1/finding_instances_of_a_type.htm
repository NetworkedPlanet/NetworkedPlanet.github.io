<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Finding Instances of a Type</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?finding_instances_of_a_type.htm"; }
  else { parent.quicksync('a6.5.2');  parent.track('topic', location.href);}
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Finding Instances of a Type</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="referring_to_topics_and_schema.htm">Previous</a>&nbsp;
     <a href="getting_topic_labels.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>SPARQL uses the special RDF predicate URL xxx to find the type of an item. Our implementation uses the same predicate. The predicate maps the instance (as the subject) to the type(s) of that instance (as the object) in the triple pattern. So to find all topics of type person, the following query can be used:</p>
<p class="p_CodeExample"><span class="f_CodeExample">SELECT&nbsp;?p&nbsp;WHERE&nbsp;{&nbsp;?p&nbsp;xxx&nbsp;&lt;http://psi.networkedplanet.com/types/person&gt;&nbsp;}</span></p>
<p>To find all of the types of a specific topic, it is only necessary to make the object in the triple pattern into a variable.</p>
<p class="p_CodeExample"><span class="f_CodeExample">SELECT&nbsp;?type&nbsp;WHERE&nbsp;{&nbsp;&lt;<a href="http://localhost/web3/topicmaps/123.../topics/456..." target="_blank" onclick="return HMTrackTopiclink(this);" class="weblink">http://localhost/web3/topicmaps/123.../topics/456...</a>&gt;&nbsp;xxx&nbsp;?type&nbsp;}</span></p>
<p>SPARQL also defines a short-cut for the xxx predicate which is simply the letter 'a' (without the quotes) so our two queries can be written more compactly as:</p>
<p class="p_CodeExample"><span class="f_CodeExample">SELECT&nbsp;?p&nbsp;WHERE&nbsp;{&nbsp;?p&nbsp;xxx&nbsp;&lt;http://psi.networkedplanet.com/types/person&gt;&nbsp;}</span></p>
<p>and</p>
<p class="p_CodeExample"><span class="f_CodeExample">SELECT&nbsp;?type&nbsp;WHERE&nbsp;{&nbsp;&lt;<a href="http://localhost/web3/topicmaps/123.../topics/456..." target="_blank" onclick="return HMTrackTopiclink(this);" class="weblink">http://localhost/web3/topicmaps/123.../topics/456...</a>&gt;&nbsp;xxx&nbsp;?type&nbsp;}</span></p>
<p>&nbsp;</p>

</td></tr></table>

</body>
</html>
