<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Querying a Topic Map using SPARQL</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?querying_a_topic_map_using_spa.htm"; }
  else { parent.quicksync('a6.4.9');  parent.track('topic', location.href);}
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Querying a Topic Map using SPARQL</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="introduction.htm">Top</a>&nbsp;
     <a href="defining_a_hierarchy.htm">Previous</a>&nbsp;
     <a href="error_handling.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>This is not a full guide to writing SPARQL but shows how to invoke SPARQL queries from the .NET client. For more information about SPARQL in Web3 please refer to <a href="querying_with_sparql.htm">Querying with SPARQL</a></p>
<p>Given the following SPARQL query that gets the employer and age of all people.</p>
<p>&nbsp;</p>
<p class="p_CodeExample"><span class="f_CodeExample">PREFIX&nbsp;ont:&nbsp;&lt;http://www.networkedplanet.com/business-ontology/types/&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">SELECT&nbsp;?person&nbsp;?age&nbsp;?employer&nbsp;WHERE&nbsp;{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;?person&nbsp;ont:employer&nbsp;?employer&nbsp;;</span></p>
<p class="p_CodeExample"><span style="width:48px">&nbsp;</span> &nbsp; &nbsp; &nbsp; &nbsp;<span class="f_CodeExample">&nbsp;&nbsp;ont:age&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;?age</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">}</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p>The query can be executed from the client in the following way:</p>
<p>&nbsp;</p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #808080;">///</span><span style="font-family: 'Consolas'; color: #008000;"> </span><span style="font-family: 'Consolas'; color: #808080;">&lt;summary&gt;</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #808080;">///</span><span style="font-family: 'Consolas'; color: #008000;"> Runs a simple SPARQL query against a topic map</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #808080;">///</span><span style="font-family: 'Consolas'; color: #008000;"> </span><span style="font-family: 'Consolas'; color: #808080;">&lt;/summary&gt;</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #808080;">///</span><span style="font-family: 'Consolas'; color: #008000;"> </span><span style="font-family: 'Consolas'; color: #808080;">&lt;param name="tmUri"&gt;</span><span style="font-family: 'Consolas'; color: #008000;">The web address of the topic map to be queried</span><span style="font-family: 'Consolas'; color: #808080;">&lt;/param&gt;</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #808080;">///</span><span style="font-family: 'Consolas'; color: #008000;"> </span><span style="font-family: 'Consolas'; color: #808080;">&lt;returns&gt;</span><span style="font-family: 'Consolas'; color: #008000;">The SPARQL query results document</span><span style="font-family: 'Consolas'; color: #808080;">&lt;/returns&gt;</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">private</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #0000ff;">static</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #2b91af;">XDocument</span><span style="font-family: 'Consolas';"> RunSparqlQuery(</span><span style="font-family: 'Consolas'; color: #2b91af;">Uri</span><span style="font-family: 'Consolas';"> tmUri)</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">const</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #0000ff;">string</span><span style="font-family: 'Consolas';"> query = </span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #a31515;">@"PREFIX ont: &lt;"</span><span style="font-family: 'Consolas';"> + </span><span style="font-family: 'Consolas'; color: #2b91af;">SchemaConstants</span><span style="font-family: 'Consolas';">.SchemaBase + </span><span style="font-family: 'Consolas'; color: #a31515;">@"&gt;</span></p>
<p><span style="font-family: 'Consolas'; color: #a31515;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;SELECT ?person ?age ?employer WHERE {</span></p>
<p><span style="font-family: 'Consolas'; color: #a31515;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;?person ont:employer ?employer ;</span></p>
<p><span style="width:48px">&nbsp;</span> &nbsp; &nbsp; &nbsp; &nbsp;<span style="font-family: 'Consolas'; color: #a31515;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;ont:age &nbsp; &nbsp; &nbsp;?age</span></p>
<p><span style="font-family: 'Consolas'; color: #a31515;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}"</span><span style="font-family: 'Consolas';">;</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">var</span><span style="font-family: 'Consolas';"> client = </span><span style="font-family: 'Consolas'; color: #0000ff;">new</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #2b91af;">TopicMapServiceClient</span><span style="font-family: 'Consolas';">();</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">var</span><span style="font-family: 'Consolas';"> tm = client.GetTopicMap(tmUri);</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">return</span><span style="font-family: 'Consolas';"> tm.QueryTopicMap(query);</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p>&nbsp;</p>
<p class="p_SectionHeading"><span class="f_SectionHeading">Processing Results</span></p>
<p>&nbsp;</p>
<p>The result returned by the QueryTopicMap method is an XML document in accordance with the SPARQL Protocol standard :</p>
<p>&nbsp;</p>
<p class="p_CodeExample"><span class="f_CodeExample">&lt;sparql&nbsp;xmlns="http://www.w3.org/2005/sparql-results#"&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&lt;head&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&lt;variable&nbsp;name="person"&nbsp;/&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&lt;variable&nbsp;name="age"&nbsp;/&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&lt;variable&nbsp;name="employer"&nbsp;/&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&lt;/head&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&lt;results&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&lt;result&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;binding&nbsp;name="person"&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;uri&gt;http://localhost/web3/topicmaps/452405e0-58c5-4067-89d3-fb51c72f48da/topics/d90c1a6f-abd8-4c9e-b151-0b7a99807c48&lt;/uri&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/binding&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;binding&nbsp;name="age"&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;literal&nbsp;datatype="http://www.w3.org/2001/XMLSchema#int"&gt;23&lt;/literal&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/binding&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;binding&nbsp;name="employer"&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;uri&gt;http://localhost/web3/topicmaps/452405e0-58c5-4067-89d3-fb51c72f48da/topics/92d67cc8-dafa-4da0-9452-31c510fcaa8f&lt;/uri&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/binding&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&lt;/result&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&lt;/results&gt;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&lt;/sparql&gt;</span></p>
<p>&nbsp;</p>
<p>You can choose either to work directly with this XML (for example using LINQ to XML or XPath queries to extract data); or convert the XML document into a DataTable. The class NetworkedPlanet.Web3.Platform.Common.SparqlResultsReader provides methods for performing this conversion.</p>
<p>The following example shows using the SparqlResultsReader class to return a query result as a DataTable:</p>
<p>&nbsp;</p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">private</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #0000ff;">static</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #2b91af;">DataTable</span><span style="font-family: 'Consolas';"> QueryTopicMap(</span><span style="font-family: 'Consolas'; color: #2b91af;">Uri</span><span style="font-family: 'Consolas';"> tmUri, </span><span style="font-family: 'Consolas'; color: #0000ff;">string</span><span style="font-family: 'Consolas';"> sparqlQuery)</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp;{</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">var</span><span style="font-family: 'Consolas';"> client = </span><span style="font-family: 'Consolas'; color: #0000ff;">new</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #2b91af;">TopicMapServiceClient</span><span style="font-family: 'Consolas';">();</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">var</span><span style="font-family: 'Consolas';"> tm = client.GetTopicMap(tmUri);</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">var</span><span style="font-family: 'Consolas';"> xmlResults = tm.QueryTopicMap(sparqlQuery);</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">var</span><span style="font-family: 'Consolas';"> resultsReader = </span><span style="font-family: 'Consolas'; color: #0000ff;">new</span><span style="font-family: 'Consolas';"> </span><span style="font-family: 'Consolas'; color: #2b91af;">SparqlResultsReader</span><span style="font-family: 'Consolas';">(xmlResults);</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  </span><span style="font-family: 'Consolas'; color: #0000ff;">return</span><span style="font-family: 'Consolas';"> resultsReader.CreateDataTable();</span></p>
<p><span style="font-family: 'Consolas';"> &nbsp; &nbsp; &nbsp; &nbsp;}</span></p>
<p>&nbsp;</p>

</td></tr></table>

</body>
</html>
